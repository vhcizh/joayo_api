# 워크플로우 이름
name: CI/CD

# 시작 조건 : 'master'에 푸시할 때마다
on:
  push:
    branches:
      - master
      - cicd

jobs:
  build:
    runs-on: ubuntu-latest # 실행환경 지정

    # GitHub Secrets에서 환경 변수 사용
    env:
      EC2_HOST: ${{ secrets.EC2_HOST }}
      EC2_USER: ${{ secrets.EC2_USER }}
      REMOTE_PATH: ${{ secrets.REMOTE_PATH }} # EC2 서버 배포 경로
      # src/test/resources/application.properties 용 환경 변수
      JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
      KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}

    # 실행 스텝 지정
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: application.properties 파일 생성
        run: |
          printf "%s" "${{ secrets.JOAYO_PROPERTIES }}" > ./src/main/resources/application.properties  

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean bootJar

      - name: Run tests
        run: ./gradlew test

      # ssh-agent : EC2 SSH 키
      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.EC2_KEY }}

      # ec2 접속 테스트 및 여러 명령어 실행
      - name: Execute commands on EC2
        run: |
          ssh -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST "
            echo 'SSH connection successful!';
            # backup, logs 디렉토리 생성
            mkdir -p $REMOTE_PATH/backup $REMOTE_PATH/logs;
          
            # 실행 중인 JAR 파일을 중지
            if pgrep -f *joayo*.jar > /dev/null; then
              echo 'Stopping existing joayo application';
              pkill -f *joayo*.jar;
              sleep 5;  # 프로세스가 완전히 종료될 때까지 대기
            else
              echo 'No existing joayo application is running';
            fi
          
            # 기존 JAR 파일을 backup 디렉토리로 이동
            if ls '$REMOTE_PATH'/*joayo*.jar 1> /dev/null 2>&1; then
              echo 'Backing up existing JAR file';
              mv '$REMOTE_PATH'/*joayo*.jar '$REMOTE_PATH/backup/';
            else
              echo 'No existing joayo application in app directory';
            fi
          "

      # 새로운 JAR 파일 이름 변경 후 복사
      - name: Upload new joayo file on EC2 server
        run: |
          CURRENT_DATE=$(date +%Y%m%d)
          CURRENT_MONTH=$(date +%Y%m)
          # ec2 서버에 로그 월별 디렉토리 생성
          ssh -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST "mkdir -p $REMOTE_PATH/logs/$CURRENT_MONTH"
          # jar 파일 ec2 서버로 이동
          scp -o StrictHostKeyChecking=no build/libs/*.jar "$EC2_USER@$EC2_HOST:$REMOTE_PATH/joayo_${CURRENT_DATE}.jar"
          # jar 파일 실행 및 로그 위치 지정
          ssh -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST "nohup java -jar $REMOTE_PATH/joayo_${CURRENT_DATE}.jar > $REMOTE_PATH/logs/$CURRENT_MONTH/app_${CURRENT_DATE}.log 2>&1 &"