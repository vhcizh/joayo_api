# 워크플로우 이름
name: CI/CD

# 시작 조건 : 'master'에 푸시할 때마다
on:
  push:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest # 실행환경 지정

    # GitHub Secrets에서 환경 변수 사용
    env:
      JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }} # JWT 비밀키
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }} # DB 접속 암호
      KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }} # KEY STORE 암호
      REMOTE_PATH: ${{ secrets.REMOTE_PATH }} # EC2 서버 배포 경로

    # 실행 스텝 지정
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean bootJar

      - name: Run tests
        run: ./gradlew test

      # ec2 접속 테스트
      - name: Test SSH connection
        run: |
          ssh -v -i ${{ secrets.EC2_KEY }} -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} "echo 'SSH connection successful!'"

      # ssh-action : EC2 SSH 키 추가 및 설정
      - name: Add SSH key and run commands
        uses: appleboy/ssh-action@v1.0.3
        with:
          key: ${{ secrets.EC2_KEY }} # ec2 pem key
          host: ${{ secrets.EC2_HOST }} # ec2 IP
          username: ${{ secrets.EC2_USER }} # ec2 우분투 유저

          run: |
            # backup 디렉토리가 없다면 생성한다
            sudo mkdir -p "$REMOTE_PATH/backup" "$REMOTE_PATH/logs"
            
            # 기존 JAR 파일이 실행 중인지 확인하고 중지
            if pgrep -f "joayo"; then
              echo "Stopping existing joayo application";
              pkill -f "joayo";
            fi
            
            # 기존 JAR 파일을 backup 디렉토리로 이동
            if ls "$REMOTE_PATH/*joayo*.jar" 1> /dev/null 2>&1; then
              echo "Backing up existing JAR file";
              mv "$REMOTE_PATH/*joayo*.jar" "$REMOTE_PATH/backup/";
            fi
            
            # 새로운 JAR 파일 이름 변경 후 복사
            CURRENT_DATE=$(date +%Y%m%d)
            scp -o StrictHostKeyChecking=no build/libs/*.jar "$EC2_USER@$EC2_HOST:$REMOTE_PATH/joayo_${CURRENT_DATE}.jar"
            sudo nohup java -jar "$REMOTE_PATH/joayo_${CURRENT_DATE}.jar" > "$REMOTE_PATH/logs/app.log" 2>&1 &